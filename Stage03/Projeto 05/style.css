* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  /*
    Variáveis no CSS
    Como as variáveis são declaradas no root
    elas são globais
  */
  --ff-heading: 'Epilogue', sans-serif;
  --ff-textiong: 'Open sans', sans-serif;

  --hue: 250;
  --bg-primary: hsl(var(--hue), 22%, 20%);
  --fc-primary: hsl(var(--hue), 0%, 100%);
  --fc-secondary: hsl(var(--hue), 50%, 80%);
  --fc-secondary-dark: hsl(var(--hue), 100%, 11%, 1);

  font-size: 62.5%;
  --fs-body: 1.6rem;
  --fs-heading: 3.0rem;
}

body {
  font-family: var(--ff-textiong);
  background-color: var(--bg-primary);
  color: var(--fc-primary);

  font-size: var(--fs-body);
}

.page {
  max-width: 33rem;
  margin: 0 auto;
}

img {
  width: 100%;
  height: auto;
}

header {
  margin: 10rem 0 8rem;
  font-family: var(--ff-heading);
  text-align: center;

  /*
  ShortHand
  animation: topdown 700ms;
  */

  animation-name: topdown;
  animation-duration: 700ms;

  /*
  animation-name: topdown;
  animation-duration: 700ms;
  animation-fill-mode: forwards;,
  animation-direction: reverse; começa de cima para baixo no @keyframe
  animation-delay: 200ms;
  animation-timing-function: ease;
  animation-iteration-count: infinite;
  animation-play-state: paused;
  
  quando a animação acada o elemento volta ao seu estado original.
  */
}

/*
quando vc usa o: animation-play-state: paused;
ai pra ativar quando passar o mouse por exxemplo, vc faz assim

header:hover {
  animation-play-state: running;
}
*/

header p {
  color: var(--fc-secondary);
  text-transform: uppercase;

  line-height: 3.2rem;
  letter-spacing: 3px;

  font-weight: 400;

  margin-bottom: 1.7rem;
}

header h1 {
  font-weight: 800;
  font-size: var(--fs-heading);
  line-height: 4.8rem;
}

main {
  display: grid;
  gap: 3.2rem;

  /* animation: downtop 700ms 350ms backwards; */

  animation-name: downtop;
  animation-duration: 700ms;
  animation-delay: 350ms;
  animation-fill-mode: backwards;

  /*
  O backwards inicia com as propriedades de 0%, mas
  quando a animação acaba ele volta pras configurações
  padrão setada no css. Ou seja, nesse caso
  opacity: 1;
  transform: translateY(0);

  que nada mais é que o default do elemento

  Todas as vezes que vc usar delay, terá de usa backwards
  */

}

.card {
  position: relative;
  font-family: var(--ff-heading);
  transition: all 200ms;
}

.card img {
  height: 41.6rem;
  object-fit: cover;

  border-radius: 6px;

  /*a transição deve ser definida aqui.
  porque no hover quando tira-se o mouse de
  cima ele não faria a transição.
  Por causa do opacity adicionado no hover, 
  tem que colocar all para ele fazer a transição
  para todos os "elementos"
  */
  /*transition: all 200ms;*/
}


.card:hover {
  transform: scale(1.1);
  opacity: 0.4;
}

/*
.card img:hover {
  transform: scale(1.1);
  opacity: 0.4;
}
*/

.card h2 {
  position: absolute;
  bottom: 5.2rem;
  left: 2.8rem;

  font-size: var(--fs-heading);
  font-weight: 800;

  display: flex;
  flex-direction: column;
  gap: 0.8rem;
}

.card h2 span {
  border-radius: 2rem;
  background-color: var(--fc-primary);
  font-size: var(--fs-body);
  font-weight: 400;
  color: var(--fc-secondary-dark);
  padding: 0 1.6rem;

  width: fit-content;
  height: 3.8rem;

  /*a tag span não altera o height, então usa-se display: inline-block ou inline-flex*/
  display: inline-flex;
  align-items: center;
}

@keyframes topdown {

  0% {
    opacity: 0;
    transform: translateY(-15px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
  
}

@keyframes downtop {

  0% {
    opacity: 0;
    transform: translateY(15px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
  
}

@media (min-width: 700px){

  :root {
    --fs-heading: 2.6rem;
  }

  .page {
    max-width: 117rem;
    padding: 0 10rem;
  }

  main {
    grid-template-columns: 1fr 1fr;
  }


}

@media (min-width: 1000px) {

  main {
    grid-template-areas: "A B B"
    "C C D";
  }

  main div:nth-child(1) {
   grid-area: A; 
  }

  main div:nth-child(2) {
    grid-area: B;
  }

  main div:nth-child(3) {
    grid-area: C;
  }

  main div:nth-child(4) {
    grid-area: D;
  }

}